$date
	Sun Jul  6 16:18:39 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 1 ! Sum $end
$var wire 1 " Cout $end
$var reg 1 # A $end
$var reg 1 $ B $end
$var reg 1 % Cin $end
$scope module FA $end
$var wire 1 # A $end
$var wire 1 & AndAB $end
$var wire 1 $ B $end
$var wire 1 % Cin $end
$var wire 1 " Cout $end
$var wire 1 ! Sum $end
$var wire 1 ' Diff1 $end
$var wire 1 ( Borrow2 $end
$var wire 1 ) Borrow1 $end
$scope module HS1 $end
$var wire 1 # A $end
$var wire 1 $ B $end
$var wire 1 ) Borrow $end
$var wire 1 ' Diff $end
$upscope $end
$scope module HS2 $end
$var wire 1 ' A $end
$var wire 1 % B $end
$var wire 1 ( Borrow $end
$var wire 1 ! Diff $end
$upscope $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 * i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 *
0)
0(
0'
0&
0%
0$
0#
0"
0!
$end
#1
1"
1!
1(
1%
b1 *
#2
0"
1'
1)
1!
0(
1$
0%
b10 *
#3
0!
1%
b11 *
#4
0)
1!
1#
0$
0%
b100 *
#5
0!
1%
b101 *
#6
1"
1&
0'
0!
1$
0%
b110 *
#7
1!
1(
1%
b111 *
#8
b1000 *
